<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Controls="clr-namespace:DW.WPFToolkit.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
    <Style TargetType="{x:Type Controls:NumberBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                    <GradientStop Color="#ABADB3" Offset="0.05" />
                    <GradientStop Color="#E2E3EA" Offset="0.07" />
                    <GradientStop Color="#E3E9EF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:NumberBox}">
                    <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                        <DockPanel>
                            <Controls:NumberResetButton AutomationProperties.AutomationId="CUI_ResetButton" x:Name="PART_ResetButton" Content="x" DockPanel.Dock="Right" Visibility="{Binding HasResetButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            
                            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center" Visibility="{Binding HasUpDownButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Controls:UpDownButton AutomationProperties.AutomationId="CUI_UpButton" Direction="Up" x:Name="PART_UpButton" IsEnabled="{TemplateBinding IsEnabled}" Focusable="False" />
                                <Controls:UpDownButton AutomationProperties.AutomationId="CUI_DownButton" Direction="Down" x:Name="PART_DownButton" IsEnabled="{TemplateBinding IsEnabled}" Focusable="False" />
                            </StackPanel>

                            <Controls:NumberCheckBox AutomationProperties.AutomationId="CUI_IsCheckedCheckBox" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="5,0,0,0" IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding IsCheckable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                    </Microsoft_Windows_Themes:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCheckable" Value="True" />
                                <Condition Property="DisabledOnUncheck" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_ResetButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_UpButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_DownButton" Property="IsEnabled" Value="False" />
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Focusable" Value="False" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:UpDownButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:UpDownButton}">
                    <Grid Background="Transparent">
                        <Path StrokeThickness="1" x:Name="arrow" Fill="Black" Margin="2" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Direction" Value="Up">
                            <Setter TargetName="arrow" Property="Data" Value="M 0,4 L 4,0 L 8,4 L 0,4" />
                        </Trigger>
                        <Trigger Property="Direction" Value="Down">
                            <Setter TargetName="arrow" Property="Data" Value="M 0,0 L 4,4 L 8,0 L 0,0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="arrow" Property="Fill" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:NumberCheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
    </Style>

    <Style TargetType="{x:Type Controls:NumberResetButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:NumberResetButton}">
                    <Border BorderThickness="1,1,0,0" BorderBrush="Transparent" x:Name="PART_LightBorder" CornerRadius="1">
                        <Border BorderThickness="0,0,1,1" BorderBrush="Transparent" x:Name="PART_DarkBorder" CornerRadius="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid Height="9" Width="9" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0" SnapsToDevicePixels="True">
                                    <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0,0 L 1,1" Stretch="Fill" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                    <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 1,0 L 0,1" Stretch="Fill" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter TargetName="PART_LightBorder" Property="BorderBrush" Value="White" />
                            <Setter TargetName="PART_DarkBorder" Property="BorderBrush" Value="Brown" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter TargetName="PART_LightBorder" Property="BorderBrush" Value="Brown" />
                            <Setter TargetName="PART_DarkBorder" Property="BorderBrush" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>